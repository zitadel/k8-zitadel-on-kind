# values-otelcol.yaml — OTLP + Prometheus scraping → OpenObserve

mode: deployment

image:
    repository: otel/opentelemetry-collector
    tag: "0.133.0"
    pullPolicy: IfNotPresent

service:
    type: ClusterIP

ports:
    otlp:
        enabled: true
        containerPort: 4317
        servicePort: 4317
    otlp-http:
        enabled: true
        containerPort: 4318
        servicePort: 4318
    metrics:
        enabled: true
        containerPort: 8888
        servicePort: 8888
    health:
        enabled: true
        containerPort: 13133
        servicePort: 13133


config:
    receivers:
        otlp:
            protocols:
                grpc: {}
                http: {}

        # Annotation-based Prometheus scraping (pods/services with prometheus.io/*)
        prometheus:
            config:
                global:
                    scrape_interval: 30s
                    evaluation_interval: 30s
                scrape_configs:
                    - job_name: kubernetes-pods
                      kubernetes_sd_configs:
                          - role: pod
                      relabel_configs:
                          - action: keep
                            source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                            regex: "true"
                          - action: replace
                            source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                            target_label: __metrics_path__
                            regex: "(.+)"
                          - action: replace
                            source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
                            target_label: __address__
                            regex: "([^:]+)(?::\\d+)?;(\\d+)"
                            replacement: "$1:$2"
                          - action: labelmap
                            regex: __meta_kubernetes_pod_label_(.+)
                          - action: replace
                            source_labels: [__meta_kubernetes_namespace]
                            target_label: kubernetes_namespace
                          - action: replace
                            source_labels: [__meta_kubernetes_pod_name]
                            target_label: kubernetes_pod_name

                    - job_name: kubernetes-services
                      kubernetes_sd_configs:
                          - role: service
                      relabel_configs:
                          - action: keep
                            source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
                            regex: "true"
                          - action: replace
                            source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
                            target_label: __metrics_path__
                            regex: "(.+)"
                          - action: replace
                            source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
                            target_label: __address__
                            regex: "([^:]+)(?::\\d+)?;(\\d+)"
                            replacement: "$1:$2"
                          - action: labelmap
                            regex: __meta_kubernetes_service_label_(.+)

    processors:
        batch: {}
        memory_limiter:
            check_interval: 5s
            limit_percentage: 80
            spike_limit_percentage: 25

    exporters:
        debug:
            verbosity: basic
        otlphttp/o2:
            endpoint: http://openobserve-openobserve-standalone.observability.svc.cluster.local:5080/api/default
            headers:
                Authorization: Basic YWRtaW5AZGV2Lm1yaWRhLm5nOkNoYW5nZU1lTm93IQ==
                organization: default
                stream-name: v1

    extensions:
        health_check: {}

    service:
        extensions:
            - health_check

        telemetry:
            metrics:
                readers:
                    - pull:
                          exporter:
                              prometheus:
                                  host: 0.0.0.0
                                  port: 8888

        pipelines:
            traces:
                receivers: [otlp]
                processors: [batch]
                exporters: [debug, otlphttp/o2]

            metrics:
                receivers: [otlp, prometheus]
                processors: [batch]
                exporters: [debug, otlphttp/o2]

            logs:
                receivers: [otlp]
                processors: [batch]
                exporters: [debug, otlphttp/o2]

serviceMonitor:
    enabled: false
